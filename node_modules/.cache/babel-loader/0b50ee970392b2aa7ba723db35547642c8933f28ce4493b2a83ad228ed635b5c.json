{"ast":null,"code":"var _jsxFileName = \"/Users/elroeyayiso/Desktop/Group-3/src/components/Chart.js\";\nimport React from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\n\n// Register necessary components in Chart.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nfunction ChartWithImages() {\n  // Replace this with your actual data\n  const data = [{\n    platform: \"Facebook\",\n    infoCount: 10,\n    imageSrc: \"/img/facebook.png\"\n  }, {\n    platform: \"Google\",\n    infoCount: 9,\n    imageSrc: \"/img/google.png\"\n  }, {\n    platform: \"Twitter\",\n    infoCount: 7,\n    imageSrc: \"/img/twitter.png\"\n  }, {\n    platform: \"Instagram\",\n    infoCount: 8,\n    imageSrc: \"/path/to/instagram.png\"\n  }, {\n    platform: \"TikTok\",\n    infoCount: 6,\n    imageSrc: \"/path/to/tiktok.png\"\n  }];\n\n  // Set up chart options and add plugins\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false\n      },\n      tooltip: {\n        callbacks: {\n          label: context => `Info Count: ${context.raw}`\n        }\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        max: 12\n      }\n    }\n  };\n\n  // Configure the data for the chart\n  const chartData = {\n    labels: data.map(item => item.platform),\n    datasets: [{\n      label: \"Info Count\",\n      data: data.map(item => item.infoCount),\n      backgroundColor: \"rgba(75, 192, 192, 0.6)\"\n    }]\n  };\n\n  // Define a custom plugin to add images\n  const imagePlugin = {\n    id: \"customImagePlugin\",\n    afterDatasetDraw(chart, args, options) {\n      const {\n        ctx,\n        chartArea: {\n          top,\n          left,\n          right,\n          bottom,\n          width,\n          height\n        },\n        scales: {\n          x,\n          y\n        }\n      } = chart;\n      data.forEach((item, index) => {\n        const img = new Image();\n        img.src = item.imageSrc;\n        const xPos = x.getPixelForValue(index);\n        const yPos = y.getPixelForValue(item.infoCount) - 25; // Adjust the y position for image placement\n\n        // Draw the image when it loads\n        img.onload = () => {\n          ctx.drawImage(img, xPos - 15, yPos, 30, 30); // Adjust x/y and size as needed\n        };\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      options: options,\n      data: chartData,\n      plugins: [imagePlugin]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n_c = ChartWithImages;\nexport default ChartWithImages;\nvar _c;\n$RefreshReg$(_c, \"ChartWithImages\");","map":{"version":3,"names":["React","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","jsxDEV","_jsxDEV","register","ChartWithImages","data","platform","infoCount","imageSrc","options","responsive","plugins","legend","display","tooltip","callbacks","label","context","raw","scales","y","beginAtZero","max","chartData","labels","map","item","datasets","backgroundColor","imagePlugin","id","afterDatasetDraw","chart","args","ctx","chartArea","top","left","right","bottom","width","height","x","forEach","index","img","Image","src","xPos","getPixelForValue","yPos","onload","drawImage","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/elroeyayiso/Desktop/Group-3/src/components/Chart.js"],"sourcesContent":["import React from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\n\n// Register necessary components in Chart.js\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\nfunction ChartWithImages() {\n    // Replace this with your actual data\n    const data = [\n        {\n            platform: \"Facebook\",\n            infoCount: 10,\n            imageSrc: \"/img/facebook.png\"\n        },\n        {\n            platform: \"Google\",\n            infoCount: 9,\n            imageSrc: \"/img/google.png\"\n        },\n        {\n            platform: \"Twitter\",\n            infoCount: 7,\n            imageSrc: \"/img/twitter.png\"\n        },\n        {\n            platform: \"Instagram\",\n            infoCount: 8,\n            imageSrc: \"/path/to/instagram.png\"\n        },\n        {\n            platform: \"TikTok\",\n            infoCount: 6,\n            imageSrc: \"/path/to/tiktok.png\"\n        }\n    ];\n\n    // Set up chart options and add plugins\n    const options = {\n        responsive: true,\n        plugins: {\n            legend: { display: false },\n            tooltip: {\n                callbacks: {\n                    label: (context) => `Info Count: ${context.raw}`\n                }\n            }\n        },\n        scales: {\n            y: {\n                beginAtZero: true,\n                max: 12\n            }\n        }\n    };\n\n    // Configure the data for the chart\n    const chartData = {\n        labels: data.map(item => item.platform),\n        datasets: [\n            {\n                label: \"Info Count\",\n                data: data.map(item => item.infoCount),\n                backgroundColor: \"rgba(75, 192, 192, 0.6)\"\n            }\n        ]\n    };\n\n    // Define a custom plugin to add images\n    const imagePlugin = {\n        id: \"customImagePlugin\",\n        afterDatasetDraw(chart, args, options) {\n            const { ctx, chartArea: { top, left, right, bottom, width, height }, scales: { x, y } } = chart;\n\n            data.forEach((item, index) => {\n                const img = new Image();\n                img.src = item.imageSrc;\n                const xPos = x.getPixelForValue(index);\n                const yPos = y.getPixelForValue(item.infoCount) - 25; // Adjust the y position for image placement\n\n                // Draw the image when it loads\n                img.onload = () => {\n                    ctx.drawImage(img, xPos - 15, yPos, 30, 30); // Adjust x/y and size as needed\n                };\n            });\n        }\n    };\n\n    return (\n        <div>\n            <Bar options={options} data={chartData} plugins={[imagePlugin]} />\n        </div>\n    );\n}\n\nexport default ChartWithImages;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}